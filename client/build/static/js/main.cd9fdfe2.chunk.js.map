{"version":3,"sources":["_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/UploadExamPage/UploadExamPage.js","components/utils/ImageSlider.js","components/views/DetailExamPage/DetailExamPage.js","components/views/Category/CategoryDetail.js","components/views/Category/Category.js","components/utils/FileUpload.js","components/views/DetailExamPage/NewSections/UploadProblemPage.js","components/views/DetailExamPage/Sections/SingleComment.js","components/views/DetailExamPage/Sections/ReplyComment.js","components/views/DetailExamPage/Sections/Comments.js","components/views/DetailExamPage/NewSections/CommentPage.js","components/App.js","serviceWorker.js","_reducers/user_reducer.js","_reducers/index.js","index.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","USER_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isAuth","sent","history","push","isAdmin","stop","_x","apply","this","googleAuth","react_default","createElement","assign","Title","Typography","LandingPage","_useState","useState","_useState2","slicedToArray","Exams","setExams","success","console","log","exams","alert","renderCards","map","exam","index","col","lg","md","xs","style","position","card","title","subject","extra","href","_id","width","professor","level","char","margin","row","gutter","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","_useState3","_useState4","rememberMe","setRememberMe","handleRememberMe","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","LoginPage_Title","es_form","Item","input","prefix","icon","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","es_checkbox","checked","float","es_button","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","name","confirmPassword","oneOf","image","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","onClick","userData","menu","mode","key","react_router_dom","to","status","NavBar","visible","setVisible","zIndex","Sections_RightMenu","drawer","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","TextArea","Input","Char","Level","UploadExamPage","setSubject","Professor","setProfessor","_useState5","_useState6","Description","setDescription","_useState7","_useState8","setChar","_useState9","_useState10","setLevel","event","preventDefault","variables","writer","description","maxWidth","textAlign","marginBottom","UploadExamPage_Title","currentTarget","item","size","ImageSlider","images","src","alt","DetailExamPage","examId","match","params","Exam","setExam","Problem","setProblem","examVariable","showDrawer","problems","problem","content","utils_ImageSlider","getContainer","bordered","descriptions","url","SubMenu","Menu","CategoryDetail","rootSubmenuKeys","openKeys","onOpenChange","latestOpenKey","find","_this","indexOf","setState","React","Component","es_alert","message","showIcon","Category_CategoryDetail","FileUpload","Images","setImages","dist_es","onDrop","files","formData","FormData","append","Axios","header","content-type","toConsumableArray","filePath","refreshFunction","getRootProps","getInputProps","overflowX","currentIndex","newImages","splice","deleteHandler","UploadProblemPage","postId","Content","setContent","UploadProblemPage_Title","body","goBack","utils_FileUpload","UploadProblemPage_TextArea","SingleComment","CommentValue","setCommentValue","OpenReply","setOpenReply","e","problemId","responseTo","comment","result","actions","es_comment","SingleComment_TextArea","ReplyComment","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","parentCommentId","DownCircleOutlined","marginLeft","Fragment","Sections_SingleComment","Comments","Comment","setComment","Sections_ReplyComment","Comments_TextArea","CommentPage","setCommentLists","problemVariable","comments","Sections_Comments","newComment","Layout","Sider","App","backgroundColor","react","fallback","NavBar_NavBar","paddingTop","minHeight","react_router","exact","path","component","Auth","LoginPage","Footer_Footer","Boolean","location","hostname","rootReducer","combineReducers","action","_objectSpread","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mTAAaA,EAAa,aACbC,EAAgB,gBAChBC,EAAY,YACZC,EAAc,cCFdC,EAAc,yBCGZC,EAAA,SAAUC,EAAeC,GAA2B,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KA+BzD,OA9BA,SAA6BG,GAEzB,IAAIC,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAChCG,EAAWC,cAuBjB,OArBAC,oBAAU,WAENF,ECiBL,WACH,IAAMG,EAAUC,IAAMC,IAAN,GAAAC,OAAalB,EAAb,UACfmB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,OAE3B,MAAO,CACHC,KAAMxB,EACNyB,QAASR,GDvBIS,IAAQL,KAAjB,eAAAM,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAsB,SAAAC,EAAMX,GAAN,OAAAQ,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACPf,EAASG,QAAQa,OADV,WAAAH,EAAAI,KAAA,CAAAJ,EAAAE,KAAA,QAEVhC,GACAK,EAAM8B,QAAQC,KAAK,mBAHTN,EAAAE,KAAA,eAMV/B,IAAegB,EAASG,QAAQiB,QAChChC,EAAM8B,QAAQC,KAAK,MAGJ,IAAXpC,GACAK,EAAM8B,QAAQC,KAAK,KAXb,wBAAAN,EAAAQ,SAAAV,MAAtB,gBAAAW,GAAA,OAAAjB,EAAAkB,MAAAC,KAAAvC,YAAA,KAiBD,CAACO,EAAUJ,EAAM8B,QAAS7B,EAAKoC,aAG9BC,EAAAjB,EAAAkB,cAAC7C,EAADwB,OAAAsB,OAAA,GAAmBxC,EAAnB,CAA0BC,KAAMA,iDE7BpCwC,EAAUC,IAAVD,MA6DOE,MA1Df,WAAuB,IAAAC,EAEOC,mBAAS,IAFhBC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAEZI,EAFYF,EAAA,GAELG,EAFKH,EAAA,GAInBxC,oBAAU,WACNE,IAAMC,IAAI,sBACLE,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACdC,QAAQC,IAAIxC,EAASC,KAAKwC,OAC1BJ,EAASrC,EAASC,KAAKwC,QAEvBC,MAAM,0BAGnB,IAMH,IAAMC,EAAcP,EAAMQ,IAAI,SAACC,EAAMC,GAGjC,OAAOpB,EAAAjB,EAAAkB,cAACoB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC1BxB,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEC,SAAU,aACpB1B,EAAAjB,EAAAkB,cAAC0B,EAAA,EAAD,CAAMC,MAAOT,EAAKU,QAASC,MAAO9B,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAI,SAAA3D,OAAW+C,EAAKa,MAAvB,QAAwCP,MAAO,CAAEQ,MAAO,MACtFjC,EAAAjB,EAAAkB,cAAA,SAAIkB,EAAKe,UAAT,uBACAlC,EAAAjB,EAAAkB,cAAA,SAAIkB,EAAKgB,MAAT,gBACAnC,EAAAjB,EAAAkB,cAAA,SAAIkB,EAAKiB,KAAT,YAEFpC,EAAAjB,EAAAkB,cAAA,cAOd,OAUID,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEQ,MAAO,MAAOI,OAAQ,cAChCrC,EAAAjB,EAAAkB,cAACE,EAAD,CAAOgC,MAAO,GAAd,+BACAnC,EAAAjB,EAAAkB,cAAA,WAEAD,EAAAjB,EAAAkB,cAACqC,EAAA,EAAD,CAAKC,OAAQ,IACRtB,kEClDTd,EAAUC,IAAVD,MAyIOqC,kBAvIf,SAAmB9E,GACjB,IAAMI,EAAWC,cACX0E,IAAoBC,aAAaC,QAAQ,cAFvBrC,EAIwBC,mBAAS,IAJjCC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAIjBsC,EAJiBpC,EAAA,GAICqC,EAJDrC,EAAA,GAAAsC,EAKYvC,mBAASkC,GALrBM,EAAAnE,OAAA6B,EAAA,EAAA7B,CAAAkE,EAAA,GAKjBE,EALiBD,EAAA,GAKLE,EALKF,EAAA,GAOlBG,EAAmB,WACvBD,GAAeD,IAKjB,OACEhD,EAAAjB,EAAAkB,cAACkD,EAAA,EAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,WAAaC,MAAM,CACnCJ,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,0BAEdE,SAAU,SAACC,EAADlF,GAA+B,IAApBmF,EAAoBnF,EAApBmF,cACnBC,WAAW,WACT,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,UAGnBxF,EFzBH,SAAmBkG,GACtB,IAAM/F,EAAUC,IAAM+F,KAAN,GAAA7F,OAAclB,EAAd,UAAkC8G,GACrC3F,KAAK,SAAAC,GAAQ,OAAIA,EAASC,OAEvC,MAAO,CACHC,KAAM1B,EACN2B,QAASR,GEmBEiG,CAAUF,IAChB3F,KAAK,SAAAC,GACAA,EAASG,QAAQ0F,cACnBC,OAAO1B,aAAa2B,QAAQ,SAAU/F,EAASG,QAAQ6F,SACpC,IAAftB,EACFoB,OAAO1B,aAAa2B,QAAQ,aAAcR,EAAOU,IAEjD7B,aAAa8B,WAAW,cAE1B9G,EAAM8B,QAAQC,KAAK,MAEnBoD,EAAoB,8CAGvB4B,MAAM,SAAAC,GACL7B,EAAoB,4CACpBkB,WAAW,WACTlB,EAAoB,KACnB,OAEPiB,GAAc,IACb,OAGJ,SAAApG,GAAS,IAENmG,EAOEnG,EAPFmG,OACAc,EAMEjH,EANFiH,QACAC,EAKElH,EALFkH,OACAC,EAIEnH,EAJFmH,aACAC,EAGEpH,EAHFoH,aACAC,EAEErH,EAFFqH,WACAC,EACEtH,EADFsH,aAEF,OACEhF,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,OAEbjF,EAAAjB,EAAAkB,cAACiF,EAAD,CAAO/C,MAAO,GAAd,sBACAnC,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAAA,QAAM2D,SAAUoB,EAAcvD,MAAO,CAAEQ,MAAO,UAE5CjC,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAAN,CAAW1B,UAAQ,GACjB1D,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACEd,GAAG,QACHe,OAAQtF,EAAAjB,EAAAkB,cAACsF,EAAA,EAAD,CAAM/G,KAAK,OAAOiD,MAAO,CAAE+D,MAAO,qBAC1CC,YAAY,0DACZjH,KAAK,QACLkH,MAAO7B,EAAOR,MACdsC,SAAUb,EACVc,OAAQb,EACRE,UACEL,EAAOvB,OAASsB,EAAQtB,MAAQ,mBAAqB,eAGxDuB,EAAOvB,OAASsB,EAAQtB,OACvBrD,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,kBAAkBL,EAAOvB,QAI5CrD,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAAN,CAAW1B,UAAQ,GACjB1D,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACEd,GAAG,WACHe,OAAQtF,EAAAjB,EAAAkB,cAACsF,EAAA,EAAD,CAAM/G,KAAK,OAAOiD,MAAO,CAAE+D,MAAO,qBAC1CC,YAAY,gEACZjH,KAAK,WACLkH,MAAO7B,EAAOP,SACdqC,SAAUb,EACVc,OAAQb,EACRE,UACEL,EAAOtB,UAAYqB,EAAQrB,SAAW,mBAAqB,eAG9DsB,EAAOtB,UAAYqB,EAAQrB,UAC1BtD,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,kBAAkBL,EAAOtB,WAI3CV,GACC5C,EAAAjB,EAAAkB,cAAA,aAAQD,EAAAjB,EAAAkB,cAAA,KAAGwB,MAAO,CAAE+D,MAAO,YAAaK,SAAU,SAAUC,OAAQ,YAAaC,QAAS,OAAQC,aAAc,SAAWpD,IAG7H5C,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAAN,KACEpF,EAAAjB,EAAAkB,cAACgG,EAAA,EAAD,CAAU1B,GAAG,aAAaoB,SAAUzC,EAAkBgD,QAASlD,GAA/D,+CACAhD,EAAAjB,EAAAkB,cAAA,KAAGgF,UAAU,oBAAoBlD,KAAK,cAAcN,MAAO,CAAE0E,MAAO,UAApE,yCAGAnG,EAAAjB,EAAAkB,cAAA,WACED,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,CAAQ5H,KAAK,UAAU6H,SAAS,SAASpB,UAAU,oBAAoBxD,MAAO,CAAE6E,SAAU,QAAUC,SAAU1B,EAAcjB,SAAUoB,GAAtI,uBAIFhF,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAK,aAAR,oDC1HVyE,EAAiB,CACrBC,SAAU,CACRjF,GAAI,CAAEkF,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVpF,GAAI,CAAEkF,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVG,EAAqB,CACzBD,WAAY,CACVpF,GAAI,CACFkF,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KAsJCC,MAjJf,SAAsBrJ,GACpB,IAAMI,EAAWC,cACjB,OAEEiC,EAAAjB,EAAAkB,cAACkD,EAAA,EAAD,CACEC,cAAe,CACbC,MAAO,GACP2D,KAAM,GACN1D,SAAU,GACV2D,gBAAiB,IAEnB1D,iBAAkBC,WAAaC,MAAM,CACnCuD,KAAMxD,WACHE,SAAS,oBACZL,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,wBACZuD,gBAAiBzD,WACd0D,MAAM,CAAC1D,MAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAEdE,SAAU,SAACC,EAADlF,GAA+B,IAApBmF,EAAoBnF,EAApBmF,cACnBC,WAAW,WAET,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,SACjB0D,KAAMnD,EAAOmD,KACbG,MAAK,8BAAA/I,OAAgCgJ,MAASC,OAAzC,iBAGPvJ,EH7DH,SAAsBkG,GACzB,IAAM/F,EAAUC,IAAM+F,KAAN,GAAA7F,OAAclB,EAAd,aAAqC8G,GAChD3F,KAAK,SAAAC,GAAQ,OAAIA,EAASC,OAE/B,MAAO,CACHC,KAAMzB,EACN0B,QAASR,GGuDEqJ,CAAatD,IAAe3F,KAAK,SAAAC,GACpCA,EAASG,QAAQmC,QACnBlD,EAAM8B,QAAQC,KAAK,UAEnBuB,MAAM1C,EAASG,QAAQiG,IAAI6C,UAI/BzD,GAAc,IACb,OAGJ,SAAApG,GAAS,IAENmG,EAOEnG,EAPFmG,OACAc,EAMEjH,EANFiH,QACAC,EAKElH,EALFkH,OACAC,EAIEnH,EAJFmH,aACAC,EAGEpH,EAHFoH,aACAC,EAEErH,EAFFqH,WACAC,EACEtH,EADFsH,aAEF,OACEhF,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,OACbjF,EAAAjB,EAAAkB,cAAA,sCACAD,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAACkF,EAAA,EAADvG,OAAAsB,OAAA,CAAMuB,MAAO,CAAE6E,SAAU,UAAeE,EAAxC,CAAwD5C,SAAUoB,IAEhEhF,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAAN,CAAW1B,UAAQ,EAAC8D,MAAM,gBACxBxH,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACEd,GAAG,OACHkB,YAAY,eACZjH,KAAK,OACLkH,MAAO7B,EAAOmD,KACdrB,SAAUb,EACVc,OAAQb,EACRE,UACEL,EAAOoC,MAAQrC,EAAQqC,KAAO,mBAAqB,eAGtDpC,EAAOoC,MAAQrC,EAAQqC,MACtBhH,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,kBAAkBL,EAAOoC,OAK5ChH,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAAN,CAAW1B,UAAQ,EAAC8D,MAAM,qBAAMC,aAAW,EAACC,eAAgB9C,EAAOvB,OAASsB,EAAQtB,MAAQ,QAAU,WACpGrD,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACEd,GAAG,QACHkB,YAAY,qBACZjH,KAAK,QACLkH,MAAO7B,EAAOR,MACdsC,SAAUb,EACVc,OAAQb,EACRE,UACEL,EAAOvB,OAASsB,EAAQtB,MAAQ,mBAAqB,eAGxDuB,EAAOvB,OAASsB,EAAQtB,OACvBrD,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,kBAAkBL,EAAOvB,QAI5CrD,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAAN,CAAW1B,UAAQ,EAAC8D,MAAM,2BAAOC,aAAW,EAACC,eAAgB9C,EAAOtB,UAAYqB,EAAQrB,SAAW,QAAU,WAC3GtD,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACEd,GAAG,WACHkB,YAAY,2BACZjH,KAAK,WACLkH,MAAO7B,EAAOP,SACdqC,SAAUb,EACVc,OAAQb,EACRE,UACEL,EAAOtB,UAAYqB,EAAQrB,SAAW,mBAAqB,eAG9DsB,EAAOtB,UAAYqB,EAAQrB,UAC1BtD,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,kBAAkBL,EAAOtB,WAI5CtD,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAAN,CAAW1B,UAAQ,EAAC8D,MAAM,wCAAUC,aAAW,GAC7CzH,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACEd,GAAG,kBACHkB,YAAY,wCACZjH,KAAK,WACLkH,MAAO7B,EAAOoD,gBACdtB,SAAUb,EACVc,OAAQb,EACRE,UACEL,EAAOqC,iBAAmBtC,EAAQsC,gBAAkB,mBAAqB,eAG5ErC,EAAOqC,iBAAmBtC,EAAQsC,iBACjCjH,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,kBAAkBL,EAAOqC,kBAI5CjH,EAAAjB,EAAAkB,cAACkF,EAAA,EAAKC,KAASyB,EACb7G,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,CAAQuB,QAAS3C,EAAcxG,KAAK,UAAU+H,SAAU1B,GAAxD,mDCtHDrC,kBAzCf,SAAmB9E,GACjB,IAAMC,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAYxC,OAAIA,EAAKiK,WAAajK,EAAKiK,SAAStI,OAEhCU,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAD,CAAMC,KAAMpK,EAAMoK,MAChB9H,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,CAAW2C,IAAI,QACb/H,EAAAjB,EAAAkB,cAAC+H,EAAA,EAAD,CAAMC,GAAG,UAAT,uBAEFjI,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,CAAW2C,IAAI,OACb/H,EAAAjB,EAAAkB,cAAC+H,EAAA,EAAD,CAAMC,GAAG,aAAT,8BAMJjI,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAD,CAAMC,KAAMpK,EAAMoK,MAChB9H,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,CAAW2C,IAAI,QACb/H,EAAAjB,EAAAkB,cAAC+H,EAAA,EAAD,CAAMC,GAAG,SAAT,iBAEFjI,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,CAAW2C,IAAI,UACb/H,EAAAjB,EAAAkB,cAAC+H,EAAA,EAAD,CAAMC,GAAG,gBAAT,oCAEFjI,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,CAAW2C,IAAI,UACb/H,EAAAjB,EAAAkB,cAAA,KAAG0H,QA/BW,WACpBzJ,IAAMC,IAAN,GAAAC,OAAalB,EAAb,YAAmCmB,KAAK,SAAAC,GACd,MAApBA,EAAS4J,OACXxK,EAAM8B,QAAQC,KAAK,UAEnBuB,MAAM,sBA0BJ,gDCOKmH,MA5Cf,WAAkB,IAAA7H,EACcC,oBAAS,GADvBC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GACT8H,EADS5H,EAAA,GACA6H,EADA7H,EAAA,GAWhB,OACER,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,OAAOxD,MAAO,CAAEC,SAAU,QAAS4G,OAAQ,EAAGrG,MAAO,SAClEjC,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,cACbjF,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAK,KAAR,iBAEF/B,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,mBAEbjF,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,cACbjF,EAAAjB,EAAAkB,cAACsI,EAAD,CAAWT,KAAK,gBAElB9H,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,CACEnB,UAAU,sBACVzG,KAAK,UACLmJ,QArBW,WACjBU,GAAW,KAsBLrI,EAAAjB,EAAAkB,cAACsF,EAAA,EAAD,CAAM/G,KAAK,iBAEbwB,EAAAjB,EAAAkB,cAACuI,EAAA,EAAD,CACE5G,MAAM,eACN6G,UAAU,QACVxD,UAAU,cACVyD,UAAU,EACVC,QA1BQ,WACdN,GAAW,IA0BLD,QAASA,GAGTpI,EAAAjB,EAAAkB,cAACsI,EAAD,CAAWT,KAAK,eC7BXc,MAZf,WACI,OACI5I,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CACRoH,OAAQ,OAAQC,QAAS,OACzBC,cAAe,SAAUC,WAAY,SACrCC,eAAgB,SAAUpD,SAAU,SAEpC7F,EAAAjB,EAAAkB,cAAA,uBCJJE,EAAUC,IAAVD,MACA+I,EAAaC,IAAbD,SAEFE,EAAO,CACT,CAAE1D,MAAO,EAAG8B,MAAO,WACnB,CAAE9B,MAAO,EAAG8B,MAAO,WACnB,CAAE9B,MAAO,EAAG8B,MAAO,WACnB,CAAE9B,MAAO,EAAG8B,MAAO,WACnB,CAAE9B,MAAO,EAAG8B,MAAO,WACnB,CAAE9B,MAAO,EAAG8B,MAAO,WACnB,CAAE9B,MAAO,EAAG8B,MAAO,WACnB,CAAE9B,MAAO,EAAG8B,MAAO,iBACnB,CAAE9B,MAAO,EAAG8B,MAAO,iBACnB,CAAE9B,MAAO,GAAI8B,MAAO,4BACpB,CAAE9B,MAAO,GAAI8B,MAAO,6BAElB6B,EAAQ,CACV,CAAE3D,MAAO,EAAG8B,MAAO,iBACnB,CAAE9B,MAAO,EAAG8B,MAAO,iBACnB,CAAE9B,MAAO,EAAG8B,MAAO,iBACnB,CAAE9B,MAAO,EAAG8B,MAAO,kBAyHR8B,MArHf,SAAwB5L,GACpB,IAAMC,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OADb2C,EAGGC,mBAAS,IAHZC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAGpBuB,EAHoBrB,EAAA,GAGX+I,EAHW/I,EAAA,GAAAsC,EAIOvC,mBAAS,IAJhBwC,EAAAnE,OAAA6B,EAAA,EAAA7B,CAAAkE,EAAA,GAIpB0G,EAJoBzG,EAAA,GAIT0G,EAJS1G,EAAA,GAAA2G,EAKWnJ,mBAAS,IALpBoJ,EAAA/K,OAAA6B,EAAA,EAAA7B,CAAA8K,EAAA,GAKpBE,EALoBD,EAAA,GAKPE,EALOF,EAAA,GAAAG,EAMHvJ,mBAAS,GANNwJ,EAAAnL,OAAA6B,EAAA,EAAA7B,CAAAkL,EAAA,GAMpB1H,EANoB2H,EAAA,GAMdC,EANcD,EAAA,GAAAE,EAOD1J,mBAAS,GAPR2J,EAAAtL,OAAA6B,EAAA,EAAA7B,CAAAqL,EAAA,GAOpB9H,EAPoB+H,EAAA,GAObC,EAPaD,EAAA,GAiCrBtG,EAAW,SAACwG,GAId,GAFAA,EAAMC,iBAEF1M,EAAKiK,WAAajK,EAAKiK,SAAStI,OAChC,OAAO0B,MAAM,uBAGjB,IAAMsJ,EAAY,CACdC,OAAQ5M,EAAKiK,SAAS5F,IACtBH,QAASA,EACTK,UAAWsH,EACXgB,YAAaZ,EACbxH,KAAMA,EACND,MAAOA,GAIXjE,IAAM+F,KAAK,uBAAwBqG,GAC9BjM,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACdI,MAAM,8BACNtD,EAAM8B,QAAQC,KAAK,MAEnBuB,MAAM,4BAOtB,OACIhB,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEgJ,SAAU,QAASpI,OAAQ,cACrCrC,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEiJ,UAAW,SAAUC,aAAc,SAC7C3K,EAAAjB,EAAAkB,cAAC2K,EAAD,CAAOzI,MAAO,GAAd,oCAGJnC,EAAAjB,EAAAkB,cAACkF,EAAA,EAAD,CAAMvB,SAAUA,GACZ5D,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEqH,QAAS,OAAQG,eAAgB,mBAG/CjJ,EAAAjB,EAAAkB,cAAA,WAAMD,EAAAjB,EAAAkB,cAAA,WACND,EAAAjB,EAAAkB,cAAA,6BACAD,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACIM,SAlEY,SAACyE,GACzBb,EAAWa,EAAMS,cAAcnF,QAkEnBA,MAAO7D,IAEX7B,EAAAjB,EAAAkB,cAAA,WAAMD,EAAAjB,EAAAkB,cAAA,WACND,EAAAjB,EAAAkB,cAAA,6BACAD,EAAAjB,EAAAkB,cAACoF,EAAA,EAAD,CACIM,SAjEc,SAACyE,GAC3BvJ,QAAQC,IAAIsJ,EAAMS,cAAcnF,OAEhC+D,EAAaW,EAAMS,cAAcnF,QA+DrBA,MAAO8D,IAEXxJ,EAAAjB,EAAAkB,cAAA,WAAMD,EAAAjB,EAAAkB,cAAA,WACND,EAAAjB,EAAAkB,cAAA,6BACAD,EAAAjB,EAAAkB,cAACiJ,EAAD,CACIvD,SA3EgB,SAACyE,GAC7BP,EAAeO,EAAMS,cAAcnF,QA2EvBA,MAAOkE,IAEX5J,EAAAjB,EAAAkB,cAAA,WAAMD,EAAAjB,EAAAkB,cAAA,WAEND,EAAAjB,EAAAkB,cAAA,UAAQ0F,SAtEK,SAACyE,GACtBJ,EAAQI,EAAMS,cAAcnF,SAsEf0D,EAAKlI,IAAI,SAAC4J,EAAM1J,GAAP,OACNpB,EAAAjB,EAAAkB,cAAA,UAAQ8H,IAAK3G,EAAOsE,MAAOoF,EAAKpF,OAAQoF,EAAKtD,UAGrDxH,EAAAjB,EAAAkB,cAAA,WAAMD,EAAAjB,EAAAkB,cAAA,WAEND,EAAAjB,EAAAkB,cAAA,UAAQ0F,SA1EM,SAACyE,GACvBD,EAASC,EAAMS,cAAcnF,SA0EhB2D,EAAMnI,IAAI,SAAC4J,EAAM1J,GAAP,OACPpB,EAAAjB,EAAAkB,cAAA,UAAQ8H,IAAK3G,EAAOsE,MAAOoF,EAAKpF,OAAQoF,EAAKtD,UAGrDxH,EAAAjB,EAAAkB,cAAA,WAAMD,EAAAjB,EAAAkB,cAAA,WAEND,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,CAAQ5H,KAAK,UAAUuM,KAAK,QAAQpD,QAAS/D,GAA7C,4BCtHDoH,OAhBf,SAAqBtN,GAGjB,OACIsC,EAAAjB,EAAAkB,cAAA,WACKvC,EAAMuN,OAAO/J,IAAI,SAACiG,EAAO/F,GAAR,OACdpB,EAAAjB,EAAAkB,cAAA,OAAK8H,IAAK3G,GACNpB,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEQ,MAAO,OACjBiJ,IAAK,oCAAA9M,OAAgH+I,GACrHgE,IAAI,oBC6IbC,OAlJf,SAAwB1N,GAGpB,IAAM2N,EAAS3N,EAAM4N,MAAMC,OAAOF,OAHP/K,EAIHC,mBAAS,IAJNC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAIpBkL,EAJoBhL,EAAA,GAIdiL,EAJcjL,EAAA,GAAAsC,EAMGvC,mBAAS,IANZwC,EAAAnE,OAAA6B,EAAA,EAAA7B,CAAAkE,EAAA,GAMpB4I,EANoB3I,EAAA,GAMX4I,EANW5I,EAAA,GAQrB6I,EAAe,CACjBP,OAAQA,GATe3B,EAWGnJ,oBAAS,GAXZoJ,EAAA/K,OAAA6B,EAAA,EAAA7B,CAAA8K,EAAA,GAWpBtB,EAXoBuB,EAAA,GAWXtB,EAXWsB,EAAA,GAYrBkC,EAAa,WACfxD,GAAW,IAETM,EAAU,WACZN,GAAW,IAMfrK,oBAAU,WACNE,IAAM+F,KAAK,oBAAqB2H,GAC3BvN,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACdC,QAAQC,IAAIxC,EAASC,KAAK4C,MAC1BsK,EAAQnN,EAASC,KAAK4C,OAEtBH,MAAM,6BAGlB9C,IAAM+F,KAAK,2BAA4B2H,GAClCvN,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACdC,QAAQC,IAAI,yBAA0BxC,EAASC,KAAKuN,UACpDH,EAAWrN,EAASC,KAAKuN,WAEzB9K,MAAM,4BAGnB,IAEH,IAAMC,EAAcyK,EAAQxK,IAAI,SAAC6K,EAAS3K,GAGtC,OAEIpB,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEC,SAAU,YAAcqG,IAAK3G,GAEvCpB,EAAAjB,EAAAkB,cAAC0B,EAAA,EAAD,KACI3B,EAAAjB,EAAAkB,cAAA,KAAGsE,GAAG,UACDwH,EAAQ/J,IACR+J,EAAQC,SAMbhM,EAAAjB,EAAAkB,cAACgM,GAAD,CAAahB,OAAQc,EAAQd,SAC7BjL,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAI,SAAA3D,OAAWiN,EAAX,KAAAjN,OAAqB2N,EAAQ/J,MAChChC,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,sBAIJpG,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,CAAQ5H,KAAK,UAAUmJ,QAASkE,EAAY9D,IAAKgE,EAAQ/J,KAAzD,QAGAhC,EAAAjB,EAAAkB,cAACuI,EAAA,EAAD,CACIT,IAAKgE,EAAQ/J,IACbJ,MAAM,eACN6G,UAAU,QACVC,UAAU,EACVC,QAASA,EACTP,QAASA,EACT8D,cAAc,EACdzK,MAAO,CAAEC,SAAU,aAElBqK,EAAQ/J,SAkB7B,OAAIwJ,EAAKjB,OAEDvK,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,iCACXjF,EAAAjB,EAAAkB,cAAC0B,EAAA,EAAD,CAAMC,MAAM,4BAAQuK,UAAU,GAC1BnM,EAAAjB,EAAAkB,cAACmM,EAAA,EAAD,KACIpM,EAAAjB,EAAAkB,cAACmM,EAAA,EAAahH,KAAd,CAAmBoC,MAAM,gBAAMgE,EAAK3J,SACpC7B,EAAAjB,EAAAkB,cAACmM,EAAA,EAAahH,KAAd,CAAmBoC,MAAM,gBAAMgE,EAAKtJ,UAApC,uBACAlC,EAAAjB,EAAAkB,cAACmM,EAAA,EAAahH,KAAd,CAAmBoC,MAAM,gBAAMgE,EAAKrJ,MAApC,gBACAnC,EAAAjB,EAAAkB,cAACmM,EAAA,EAAahH,KAAd,CAAmBoC,MAAM,gBAAMgE,EAAKpJ,KAApC,wBACApC,EAAAjB,EAAAkB,cAACmM,EAAA,EAAahH,KAAd,CAAmBoC,MAAM,gBAAMgE,EAAKhB,gBAKhDxK,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,KACIpG,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAI,GAAA3D,OAAKV,EAAM4N,MAAMe,IAAjB,YAAP,oCAIJrM,EAAAjB,EAAAkB,cAAA,WACKgB,IAqBTjB,EAAAjB,EAAAkB,cAAA,sFC7IJqM,GAAYC,IAAZD,QAqJOE,iNAhJXC,gBAAkB,CAAC,IAAK,IAAK,IAAK,OAElC5O,MAAQ,CACJ6O,SAAU,CAAC,QAGfC,aAAe,SAAAD,GACX,IAAME,EAAgBF,EAASG,KAAK,SAAA9E,GAAG,OAA0C,IAAtC+E,EAAKjP,MAAM6O,SAASK,QAAQhF,MAClB,IAAjD+E,EAAKL,gBAAgBM,QAAQH,GAC7BE,EAAKE,SAAS,CAAEN,aAEhBI,EAAKE,SAAS,CACVN,SAAUE,EAAgB,CAACA,GAAiB,gFAMpD,OACI5M,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAD,CACIC,KAAK,SACL4E,SAAU5M,KAAKjC,MAAM6O,SACrBC,aAAc7M,KAAK6M,aACnBlL,MAAO,CAAEQ,MAAO,MAEhBjC,EAAAjB,EAAAkB,cAACqM,GAAD,CAASvE,IAAI,IAAInG,MAAM,iBACnB5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,sBACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,mCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,KAAYpF,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAK,kCAAR,YACZ/B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,iBAEJpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,KAAYpF,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAK,kCAAR,YACZ/B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,sBACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,iBAEJpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,sBACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,sBACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,iBAEJpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,iBAEJpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,sBACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,4BACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,gBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,4BACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,4BACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGRpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,sBACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,iBAEJpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,mBAIZpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAASvE,IAAI,IAAInG,MAAM,iBACnB5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,iBACApF,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,kBAGJpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAASvE,IAAI,IAAInG,MAAM,iBACnB5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,kCACX5B,EAAAjB,EAAAkB,cAACqM,GAAD,CAAS1K,MAAM,yCACX5B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,KAAYpF,EAAAjB,EAAAkB,cAAA,KAAG8B,KAAK,kCAAR,kBACZ/B,EAAAjB,EAAAkB,cAAC4H,EAAA,EAAKzC,KAAN,yBAIZpF,EAAAjB,EAAAkB,cAACqM,GAAD,CAASvE,IAAI,IAAInG,MAAM,2BA7HdqL,IAAMC,WCmBpB1K,YAnBf,SAAkB9E,GACd,IAAMC,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAExC,OAAIA,EAAKiK,WAAajK,EAAKiK,SAAStI,OAE5BU,EAAAjB,EAAAkB,cAACkN,GAAA,EAAD,CACIC,QAAQ,sBACR5C,YAAY,qFACZhM,KAAK,OACL6O,UAAQ,IAKZrN,EAAAjB,EAAAkB,cAACqN,GAAD,QAKG9K,wBCmDA+K,OAxEf,SAAoB7P,GAAO,IAAA4C,EAEKC,mBAAS,IAFdC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAEhBkN,EAFgBhN,EAAA,GAERiN,EAFQjN,EAAA,GAqCvB,OACIR,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEqH,QAAS,OAAQG,eAAgB,kBAC3CjJ,EAAAjB,EAAAkB,cAACyN,GAAA,EAAD,CAAUC,OAnCE,SAACC,GAEjB,IAAIC,EAAW,IAAIC,SAInBD,EAASE,OAAO,OAAQH,EAAM,IAE9BI,IAAM/J,KAAK,qBAAsB4J,EALlB,CACXI,OAAQ,CAAEC,eAAgB,yBAKzB7P,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACd6M,EAAS,GAAArP,OAAAQ,OAAAuP,GAAA,EAAAvP,CAAK4O,GAAL,CAAalP,EAASC,KAAK6P,YACpC1Q,EAAM2Q,gBAAN,GAAAjQ,OAAAQ,OAAAuP,GAAA,EAAAvP,CAA0B4O,GAA1B,CAAkClP,EAASC,KAAK6P,aAIhDpN,MAAM,+FAoBT,SAAArC,GAAA,IAAG2P,EAAH3P,EAAG2P,aAAcC,EAAjB5P,EAAiB4P,cAAjB,OACGvO,EAAAjB,EAAAkB,cAAA,MAAArB,OAAAsB,OAAA,CACIuB,MAAO,CACHQ,MAAO,IAAK4G,OAAQ,IAAK/C,OAAQ,sBACjCgD,QAAS,OAAQE,WAAY,SAAUC,eAAgB,WAEvDqF,KACJtO,EAAAjB,EAAAkB,cAAA,QAAWsO,KACXvO,EAAAjB,EAAAkB,cAACsF,EAAA,EAAD,CAAM/G,KAAK,OAAOiD,MAAO,CAAEoE,SAAU,aAKjD7F,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEqH,QAAS,OAAQ7G,MAAO,QAAS4G,OAAQ,QAAS2F,UAAW,WAEtEhB,EAAOtM,IAAI,SAACiG,EAAO/F,GAAR,OAGRpB,EAAAjB,EAAAkB,cAAA,OAAK0H,QAAS,kBAhCR,SAACR,GACnB,IAAMsH,EAAejB,EAAOT,QAAQ5F,GAChCuH,EAAS9P,OAAAuP,GAAA,EAAAvP,CAAO4O,GACpBkB,EAAUC,OAAOF,EAAc,GAC/BhB,EAAUiB,GACVhR,EAAM2Q,gBAAgBK,GA2BUE,CAAczH,IAAQY,IAAK3G,GAE3CpB,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAE6E,SAAU,QAASrE,MAAO,QAAS4G,OAAQ,SAAWqC,IAAK,oCAAA9M,OAAgH+I,GAASgE,IAAI,gBC3DtNhL,GAAUC,IAAVD,MACA+I,GAAaC,IAAbD,SAsFO2F,OAlFf,SAAAlQ,GAAsDA,EAAzBjB,MAAyB,IAAlB8B,EAAkBb,EAAlBa,QAAS8L,EAAS3M,EAAT2M,MAInC3N,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAClCmR,EAASxD,EAAMC,OAAOF,OALsB/K,EASpBC,mBAAS,IATWC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAS3CyO,EAT2CvO,EAAA,GASlCwO,EATkCxO,EAAA,GAAAsC,EAUtBvC,mBAAS,IAVawC,EAAAnE,OAAA6B,EAAA,EAAA7B,CAAAkE,EAAA,GAU3C0K,EAV2CzK,EAAA,GAUnC0K,EAVmC1K,EAAA,GAqDlD,OACI/C,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEgJ,SAAU,QAASpI,OAAQ,cACrCrC,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEiJ,UAAW,SAAUC,aAAc,SAC7C3K,EAAAjB,EAAAkB,cAACgP,GAAD,CAAO9M,MAAO,GAAd,oCAMJnC,EAAAjB,EAAAkB,cAACkF,EAAA,EAAD,CAAMvB,SAzCQ,SAACwG,GACnBA,EAAMC,iBAMN,IAAM6E,EAAO,CAET3E,OAAQ5M,EAAKiK,SAAS5F,IACtB8M,OAAQA,EACR9C,QAAS+C,EACT9D,OAAQuC,GAKZQ,IAAM/J,KAAK,6BAA8BiL,GACpC7Q,KAAK,SAAAC,GACEA,EAASC,KAAKqC,QACdpB,EAAQ2P,UAERtO,QAAQC,IAAIxC,EAASC,MACrByC,MAAM,qFAmBVhB,EAAAjB,EAAAkB,cAAA,4DACAD,EAAAjB,EAAAkB,cAACmP,GAAD,CAAYf,gBAnDH,SAACK,GAClBjB,EAAUiB,MAoDF1O,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAAA,WAEAD,EAAAjB,EAAAkB,cAAA,gDAEAD,EAAAjB,EAAAkB,cAACoP,GAAD,CAAU1J,SAtDM,SAACyE,GACzB4E,EAAW5E,EAAMS,cAAcnF,QAqDkBA,MAAOqJ,IAChD/O,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAAA,UAAQzB,KAAK,UAAb,6BClFR0K,GAAaC,IAAbD,SAyEOoG,OAxEf,SAAuB5R,GACnB,IAAMC,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OADd2C,EAEcC,mBAAS,IAFvBC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAEnBiP,EAFmB/O,EAAA,GAELgP,EAFKhP,EAAA,GAAAsC,EAGQvC,oBAAS,GAHjBwC,EAAAnE,OAAA6B,EAAA,EAAA7B,CAAAkE,EAAA,GAGnB2M,EAHmB1M,EAAA,GAGR2M,EAHQ3M,EAAA,GAapBa,EAAW,SAAC+L,GACdA,EAAEtF,iBAEF,IAAMC,EAAY,CACdC,OAAQ5M,EAAKiK,SAAS5F,IACtB4N,UAAWlS,EAAMkS,UACjBC,WAAYnS,EAAMoS,QAAQ9N,IAC1BgK,QAASuD,GAIbvB,IAAM/J,KAAK,2BAA4BqG,GAClCjM,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACd4O,EAAgB,IAChBE,GAAcD,GACd/R,EAAM2Q,gBAAgB/P,EAASC,KAAKwR,SAEpC/O,MAAM,6BAKhBgP,EAAU,CACZhQ,EAAAjB,EAAAkB,cAAA,QAAM0H,QA5BQ,WACd+H,GAAcD,IA2BY1H,IAAI,0BAA0B,MAI5D,OACI/H,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAACgQ,GAAA,EAAD,CACID,QAASA,EACThE,QACIhM,EAAAjB,EAAAkB,cAAA,SACKvC,EAAMoS,QAAQ9D,WAO1ByD,GACGzP,EAAAjB,EAAAkB,cAAA,QAAMwB,MAAO,CAAEqH,QAAS,QAAUlF,SAAUA,GACxC5D,EAAAjB,EAAAkB,cAACiQ,GAAD,CACIzO,MAAO,CAAEQ,MAAO,OAAQ+D,aAAc,OACtCL,SAtDC,SAACgK,GAClBH,EAAgBG,EAAE9E,cAAcnF,QAsDhBA,MAAO6J,EACP9J,YAAY,8BAEhBzF,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,CAAQ3E,MAAO,CAAEQ,MAAO,MAAO4G,OAAQ,QAAUlB,QAAS/D,GAA1D,6BCZLuM,OApDf,SAASA,EAAazS,GAAO,IAAA4C,EAE2BC,mBAAS,GAFpCC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAElB8P,EAFkB5P,EAAA,GAEE6P,EAFF7P,EAAA,GAAAsC,EAGyBvC,oBAAS,GAHlCwC,EAAAnE,OAAA6B,EAAA,EAAA7B,CAAAkE,EAAA,GAGlBwN,EAHkBvN,EAAA,GAGCwN,EAHDxN,EAAA,GAIzB/E,oBAAU,WAEN,IAAIwS,EAAgB,EACpB9S,EAAM+S,aAAavP,IAAI,SAAC4O,GAEhBA,EAAQD,aAAenS,EAAMgT,iBAC7BF,MAGRH,EAAsBG,IACvB,CAAC9S,EAAM+S,aAAc/S,EAAMgT,kBAG9B,IAA0BA,EAiB1B,OACI1Q,EAAAjB,EAAAkB,cAAA,WAEKmQ,EAAqB,GAClBpQ,EAAAjB,EAAAkB,cAAC0Q,GAAA,EAAD,CACIlP,MAAO,CAAEmP,WAAY,QACrBjJ,QAXK,WACjB4I,GAAsBD,MAcjBA,IA3BiBI,EA4BKhT,EAAMgT,gBA3BjChT,EAAM+S,aAAavP,IAAI,SAAC4O,EAAS1O,GAAV,OACnBpB,EAAAjB,EAAAkB,cAACD,EAAAjB,EAAM8R,SAAP,KACKf,EAAQD,aAAea,GACpB1Q,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEQ,MAAO,MAAO2O,WAAY,SACpC5Q,EAAAjB,EAAAkB,cAAC6Q,GAAD,CAAehB,QAASA,EAASF,UAAWlS,EAAMkS,UAAWvB,gBAAiB3Q,EAAM2Q,kBACpFrO,EAAAjB,EAAAkB,cAACkQ,EAAD,CAAcM,aAAc/S,EAAM+S,aAAcC,gBAAiBZ,EAAQ9N,IAAK4N,UAAWlS,EAAMkS,UAAWvB,gBAAiB3Q,EAAM2Q,yBCtBjJnF,GAAaC,IAAbD,SA6DO6H,OA3Df,SAAkBrT,GACd,IAAMC,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OADnB2C,EAESC,mBAAS,IAFlBC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAEd0Q,EAFcxQ,EAAA,GAELyQ,EAFKzQ,EAAA,GAQfoD,EAAW,SAAC+L,GACdA,EAAEtF,iBAEF,IAAMC,EAAY,CACd0B,QAASgF,EACTzG,OAAQ5M,EAAKiK,SAAS5F,IACtB4N,UAAWlS,EAAMkS,WAGrB1R,IAAM+F,KAAK,2BAA4BqG,GAClCjM,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACdqQ,EAAW,IACXvT,EAAM2Q,gBAAgB/P,EAASC,KAAKwR,SAEpC/O,MAAM,6BAKtB,OACIhB,EAAAjB,EAAAkB,cAAA,WAEKY,QAAQC,IAAIpD,EAAM+S,cAElB/S,EAAM+S,cAAgB/S,EAAM+S,aAAavP,IAAI,SAAC4O,EAAS1O,GAAV,OACxC0O,EAAQD,YACN7P,EAAAjB,EAAAkB,cAACD,EAAAjB,EAAM8R,SAAP,KACI7Q,EAAAjB,EAAAkB,cAAC6Q,GAAD,CAAehB,QAASA,EAASF,UAAWlS,EAAMkS,UAAWvB,gBAAiB3Q,EAAM2Q,kBACpFrO,EAAAjB,EAAAkB,cAACiR,GAAD,CAAcT,aAAc/S,EAAM+S,aAAcb,UAAWlS,EAAMkS,UAAWc,gBAAiBZ,EAAQ9N,IAAKqM,gBAAiB3Q,EAAM2Q,qBAQ7IrO,EAAAjB,EAAAkB,cAAA,QAAMwB,MAAO,CAAEqH,QAAS,QAAUlF,SAAUA,GACxC5D,EAAAjB,EAAAkB,cAACkR,GAAD,CACI1P,MAAO,CAAEQ,MAAO,OAAQ+D,aAAc,OACtCL,SA5CK,SAACgK,GAClBsB,EAAWtB,EAAE9E,cAAcnF,QA4CfA,MAAOsL,EACPvL,YAAY,8BAEhBzF,EAAAjB,EAAAkB,cAAA,WACAD,EAAAjB,EAAAkB,cAACmG,EAAA,EAAD,CAAQ3E,MAAO,CAAEQ,MAAO,MAAO4G,OAAQ,QAAUlB,QAAS/D,GAA1D,mBCGDwN,OA3Df,SAAqB1T,GACjB,IAAMkS,EAAYlS,EAAM4N,MAAMC,OAAOqE,UADbtP,EAEMC,mBAAS,IAFfC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GAEjBoL,EAFiBlL,EAAA,GAERmL,EAFQnL,EAAA,GAAAsC,EAGgBvC,mBAAS,IAHzBwC,EAAAnE,OAAA6B,EAAA,EAAA7B,CAAAkE,EAAA,GAGjB2N,EAHiB1N,EAAA,GAGHsO,EAHGtO,EAAA,GAKxBlC,QAAQC,IAAI8O,GAEZ,IAAM0B,EAAkB,CACpB1B,UAAWA,GAgCf,OA7BA5R,oBAAU,WACNE,IAAM+F,KAAK,0BAA2BqN,GACjCjT,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACdC,QAAQC,IAAIxC,EAASC,KAAKwN,SAC1BJ,EAAWrN,EAASC,KAAKwN,UAEzB/K,MAAM,gCAKlB9C,IAAM+F,KAAK,2BAA4BqN,GAClCjT,KAAK,SAAAC,GACEA,EAASC,KAAKqC,SACdC,QAAQC,IAAI,yBAA0BxC,EAASC,KAAKgT,UACpDF,EAAgB/S,EAASC,KAAKgT,WAE9BvQ,MAAM,8BAKnB,IAOChB,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAAA,OAAKgF,UAAU,iCACXjF,EAAAjB,EAAAkB,cAAC0B,EAAA,EAAD,CAAMC,MAAM,eAAKuK,UAAU,GACtBT,EAAQM,UAIjBhM,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAAC0B,EAAA,EAAD,CAAMC,MAAM,eAAKuK,UAAU,GACvBnM,EAAAjB,EAAAkB,cAACuR,GAAD,CAAUf,aAAcA,EAAcb,UAAWlE,EAAQ1J,IAAKqM,gBAdxD,SAACoD,GACnBJ,EAAgBZ,EAAarS,OAAOqT,WCzBjBC,IAAnB3C,QAAmB2C,IAAVC,MA8BFC,OA3Bf,WACE,OACE5R,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEoQ,gBAAiB,UAC7B7R,EAAAjB,EAAAkB,cAAC6R,EAAA,SAAD,CAAUC,SAAW/R,EAAAjB,EAAAkB,cAAA,0BACnBD,EAAAjB,EAAAkB,cAAC+R,EAAD,MAEAhS,EAAAjB,EAAAkB,cAAA,OAAKwB,MAAO,CAAEwQ,WAAY,OAAQC,UAAW,uBAC3ClS,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,KACEnS,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,EAAKlS,EAAa,QACnDL,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC,EAAKC,GAAW,KACtDxS,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAKxL,GAAc,KAC5D/G,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWC,EAAKjJ,GAAgB,KACjEtJ,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWC,EAAKnH,IAAgB,KAClEpL,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAWC,EAAK1D,IAAmB,KAC5E7O,EAAAjB,EAAAkB,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2BAA2BC,UAAWC,EAAKnB,IAAa,OAK9EpR,EAAAjB,EAAAkB,cAACwS,EAAD,SC3BYC,QACW,cAA7BtO,OAAOuO,SAASC,UAEe,UAA7BxO,OAAOuO,SAASC,UAEhBxO,OAAOuO,SAASC,SAAStH,MACvB,0oBCVS,ICDAuH,GAJKC,aAAgB,CAChCnV,KDIW,WAAyB,IAAhBE,EAAgBN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,GAAGwV,EAAOxV,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAOsV,EAAOvU,MACV,KAAKzB,EACD,OAAAiW,GAAA,GAAWnV,EAAX,CAAkBoV,SAAUF,EAAOtU,UACvC,KAAK3B,EACD,OAAAkW,GAAA,GAAYnV,EAAZ,CAAmBqV,YAAaH,EAAOtU,UAC3C,KAAKzB,EACD,OAAAgW,GAAA,GAAWnV,EAAX,CAAkB+J,SAAUmL,EAAOtU,UACvC,KAAKxB,EACD,OAAA+V,GAAA,GAAWnV,GACf,QACI,OAAOA,qCENbsV,GAA4BC,aAAgBC,KAAmBC,KAAnCF,CAA+CG,MAEjFC,IAASC,OACLzT,EAAAjB,EAAAkB,cAACyT,EAAA,EAAD,CACIC,MAAOR,GACHS,GACAxP,OAAOyP,8BACPzP,OAAOyP,iCAGX7T,EAAAjB,EAAAkB,cAAC+H,EAAA,EAAD,KACIhI,EAAAjB,EAAAkB,cAAC6T,GAAD,QAGNC,SAASC,eAAe,SHsGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9V,KAAK,SAAA+V,GACjCA,EAAaC","file":"static/js/main.cd9fdfe2.chunk.js","sourcesContent":["export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","import React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/register_login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { Card, Col, Typography, Row } from 'antd';\nimport axios from 'axios';\nconst { Title } = Typography;\n\n\nfunction LandingPage() {\n\n    const [Exams, setExams] = useState([])\n\n    useEffect(() => {\n        axios.get('/api/exam/getExams')\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data.exams)\n                    setExams(response.data.exams)\n                } else {\n                    alert('Failed to get Exams')\n                }\n            })\n    }, [])\n\n\n\n\n\n    const renderCards = Exams.map((exam, index) => {\n\n\n        return <Col lg={6} md={8} xs={24}>\n            <div style={{ position: 'relative' }}>\n                <Card title={exam.subject} extra={<a href={`/exam/${exam._id}`}>More</a>} style={{ width: 250 }}>\n                    <p>{exam.professor} 교수님</p>\n                    <p>{exam.level}학년</p>\n                    <p>{exam.char}차</p>\n                </Card>\n            </div><br />\n        </Col>\n\n    })\n\n\n\n    return (\n\n\n        // <>\n        //     <div className=\"app\">\n        //         <span style={{ fontSize: '2rem' }}>서울대학교 수의학과 족보사이트</span>\n        //     </div>\n        // </>\n\n\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <Title level={2} > 과목 목록 </Title>\n            <hr />\n\n            <Row gutter={16}>\n                {renderCards}\n            </Row>\n        </div>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  // const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>로그인</Title>\n            <br />\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"이메일을 입력하세요\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"비밀번호를 입력하세요\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >아이디 기억하기</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  비밀번호 찾기\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    로그인\n                </Button>\n                </div>\n                <a href=\"/register\">회원가입</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>회원가입</h2>\n            <br />\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"이름\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"이름\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n\n              <Form.Item required label=\"이메일\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"이메일\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"비밀번호\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호 확인\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"비밀번호 확인\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  회원가입\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter, Link } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <Link to=\"/login\">로그인</Link>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <Link to=\"/register\">회원가입</Link>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"exam\">\n          <Link to=\"/exam\">족보</Link>\n        </Menu.Item>\n        <Menu.Item key=\"create\">\n          <Link to=\"/exam/upload\">과목 올리기</Link>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>로그아웃</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\n\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">로고</a>\n      </div>\n      <div className=\"menu__container\">\n\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize: '1rem'\n        }}>\n            <p> FOOTER </p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst Char = [\r\n    { value: 1, label: '1차' },\r\n    { value: 2, label: '2차' },\r\n    { value: 3, label: '3차' },\r\n    { value: 4, label: '4차' },\r\n    { value: 5, label: '5차' },\r\n    { value: 6, label: '6차' },\r\n    { value: 7, label: '7차' },\r\n    { value: 8, label: '1학기' },\r\n    { value: 9, label: '2학기' },\r\n    { value: 10, label: '중간고사' },\r\n    { value: 11, label: '기말고사' }\r\n]\r\nconst Level = [\r\n    { value: 1, label: '1학년' },\r\n    { value: 2, label: '2학년' },\r\n    { value: 3, label: '3학년' },\r\n    { value: 4, label: '4학년' },\r\n\r\n]\r\n\r\nfunction UploadExamPage(props) {\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [Professor, setProfessor] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [char, setChar] = useState(1)\r\n    const [level, setLevel] = useState(1)\r\n\r\n\r\n\r\n    const handleChangeSubject = (event) => {\r\n        setSubject(event.currentTarget.value)\r\n    }\r\n    const handleChangeDescription = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeProfessor = (event) => {\r\n        console.log(event.currentTarget.value)\r\n\r\n        setProfessor(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeChar = (event) => {\r\n        setChar(event.currentTarget.value)\r\n    }\r\n    const handleChangeLevel = (event) => {\r\n        setLevel(event.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('Please Log in First')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            subject: subject,\r\n            professor: Professor,\r\n            description: Description,\r\n            char: char,\r\n            level: level\r\n\r\n        }\r\n\r\n        axios.post('/api/exam/uploadExam', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('exam Uploaded Successfully')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('Failed to upload exam')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2} >과목 업로드</Title>\r\n            </div>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                </div>\r\n\r\n                <br /><br />\r\n                <label>과목</label>\r\n                <Input\r\n                    onChange={handleChangeSubject}\r\n                    value={subject}\r\n                />\r\n                <br /><br />\r\n                <label>교수</label>\r\n                <Input\r\n                    onChange={handleChangeProfessor}\r\n                    value={Professor}\r\n                />\r\n                <br /><br />\r\n                <label>설명</label>\r\n                <TextArea\r\n                    onChange={handleChangeDescription}\r\n                    value={Description}\r\n                />\r\n                <br /><br />\r\n\r\n                <select onChange={handleChangeChar}>\r\n                    {Char.map((item, index) => (\r\n                        <option key={index} value={item.value}>{item.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br /><br />\r\n\r\n                <select onChange={handleChangeLevel}>\r\n                    {Level.map((item, index) => (\r\n                        <option key={index} value={item.value}>{item.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br /><br />\r\n\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    제출\r\n            </Button>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadExamPage\r\n","import React from 'react'\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\n\nfunction ImageSlider(props) {\n\n\n    return (\n        <div>\n            {props.images.map((image, index) => (\n                <div key={index}>\n                    <img style={{ width: '50%', }}\n                        src={process.env.NODE_ENV === 'development' ? `http://localhost:5000/${image}` : `https://sjogbosite.herokuapp.com/${image}`}\n                        alt='img' />\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default ImageSlider\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Descriptions, Card, Button, Drawer } from 'antd';\r\nimport ImageSlider from '../../utils/ImageSlider'\r\nimport './Sections/DetailExamPage.css'\r\nimport Comment from './New/Comment'\r\n\r\nfunction DetailExamPage(props) {\r\n\r\n\r\n    const examId = props.match.params.examId\r\n    const [Exam, setExam] = useState([])\r\n\r\n    const [Problem, setProblem] = useState([])\r\n\r\n    const examVariable = {\r\n        examId: examId\r\n    }\r\n    const [visible, setVisible] = useState(false);\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/exam/getExam', examVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.exam)\r\n                    setExam(response.data.exam)\r\n                } else {\r\n                    alert('Failed to get exam Info')\r\n                }\r\n            })\r\n        axios.post('/api/problem/getProblems', examVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log('response.data.problems', response.data.problems)\r\n                    setProblem(response.data.problems)\r\n                } else {\r\n                    alert('Failed to get problem')\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const renderCards = Problem.map((problem, index) => {\r\n\r\n\r\n        return (\r\n\r\n            <div style={{ position: 'relative' }} key={index}>\r\n\r\n                <Card>\r\n                    <p id=\"p_wrap\">\r\n                        {problem._id}\r\n                        {problem.content}\r\n                    </p>\r\n\r\n\r\n\r\n\r\n                    <ImageSlider images={problem.images} />\r\n                    <br />\r\n                    <a href={`/exam/${examId}/${problem._id}`}>\r\n                        <Button>댓글</Button>\r\n\r\n                    </a>\r\n\r\n                    <Button type=\"primary\" onClick={showDrawer} key={problem._id}>\r\n                        Open\r\n                    </Button>\r\n                    <Drawer\r\n                        key={problem._id}\r\n                        title=\"Basic Drawer\"\r\n                        placement=\"right\"\r\n                        closable={false}\r\n                        onClose={onClose}\r\n                        visible={visible}\r\n                        getContainer={false}\r\n                        style={{ position: 'absolute' }}\r\n                    >\r\n                        {problem._id}\r\n                    </Drawer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Card>\r\n            </div>\r\n\r\n        )\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    if (Exam.writer) {\r\n        return (\r\n            <div>\r\n                <div className=\"site-card-border-less-wrapper\">\r\n                    <Card title=\"강의 정보\" bordered={true} >\r\n                        <Descriptions>\r\n                            <Descriptions.Item label=\"강의\">{Exam.subject}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"강사\">{Exam.professor} 교수님</Descriptions.Item>\r\n                            <Descriptions.Item label=\"학년\">{Exam.level}학년</Descriptions.Item>\r\n                            <Descriptions.Item label=\"차시\">{Exam.char}차(학기)</Descriptions.Item>\r\n                            <Descriptions.Item label=\"설명\">{Exam.description}</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </Card>\r\n\r\n                </div>\r\n                <Button>\r\n                    <a href={`${props.match.url}/upload`}>문제 올리기</a>\r\n\r\n                </Button>\r\n\r\n                <div>\r\n                    {renderCards}\r\n                </div>\r\n\r\n\r\n\r\n\r\n                {/* <div>\r\n                    <Card title=\"족보\" bordered={true} >\r\n                        <Comments CommentLists={CommentLists} problemId={Exam._id} refreshFunction={updateComment} />\r\n\r\n                    </Card>\r\n\r\n                </div> */}\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DetailExamPage\r\n\r\n","import React from 'react'\r\nimport { Menu } from 'antd';\r\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nclass CategoryDetail extends React.Component {\r\n    // submenu keys of first level\r\n    rootSubmenuKeys = ['1', '2', '3', '4'];\r\n\r\n    state = {\r\n        openKeys: ['1'],\r\n    };\r\n\r\n    onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({ openKeys });\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    openKeys={this.state.openKeys}\r\n                    onOpenChange={this.onOpenChange}\r\n                    style={{ width: 256 }}\r\n                >\r\n                    <SubMenu key=\"1\" title=\"1학년\">\r\n                        <SubMenu title=\"생화학\">\r\n                            <SubMenu title=\"이항 교수님\">\r\n                                <Menu.Item ><a href='/exam/5f05a4bd631b145e203d5cc5'>1차</a></Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                                <Menu.Item >3차</Menu.Item>\r\n                                <Menu.Item >4차</Menu.Item>\r\n                                <Menu.Item >5차</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu title=\"조제열 교수님\">\r\n                                <Menu.Item ><a href='/exam/5f05a786f101dc3fd881ba9b'>1차</a></Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                                <Menu.Item >3차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"생리학\">\r\n                            <SubMenu title=\"한호재 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                                <Menu.Item >3차</Menu.Item>\r\n                                <Menu.Item >4차</Menu.Item>\r\n                                <Menu.Item >5차</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu title=\"이장헌 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                                <Menu.Item >3차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"발생학\">\r\n                            <SubMenu title=\"한호재 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                                <Menu.Item >3차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"해부학\">\r\n                            <SubMenu title=\"기무라 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu title=\"남상섭 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu title=\"황인구 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"조직학\">\r\n                            <SubMenu title=\"윤여성 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                                <Menu.Item >3차</Menu.Item>\r\n                                <Menu.Item >4차</Menu.Item>\r\n                                <Menu.Item >5차</Menu.Item>\r\n                                <Menu.Item >6차</Menu.Item>\r\n                                <Menu.Item >7차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"생물공학\">\r\n                            <SubMenu title=\"백승준 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                                <Menu.Item >2차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"기생충학\">\r\n                            <SubMenu title=\"윤희정 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"미생물학\">\r\n                            <SubMenu title=\"박용호 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu title=\"약리학\">\r\n                            <SubMenu title=\"이소영 교수님\">\r\n                                <Menu.Item >2차</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu title=\"류판동 교수님\">\r\n                                <Menu.Item >1차</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"2\" title=\"2학년\">\r\n                        <Menu.Item >Option 5</Menu.Item>\r\n                        <Menu.Item >Option 6</Menu.Item>\r\n\r\n                    </SubMenu>\r\n                    <SubMenu key=\"3\" title=\"3학년\">\r\n                        <SubMenu title=\"방사선과학\">\r\n                            <SubMenu title=\"윤정희 교수님\">\r\n                                <Menu.Item ><a href='/exam/5f0c4ba8b4136d2b0c0939a0'>1학기</a></Menu.Item>\r\n                                <Menu.Item >2학기</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"4\" title=\"4학년\">\r\n                    </SubMenu>\r\n                </Menu>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryDetail\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Alert } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport CategoryDetail from './CategoryDetail';\r\n\r\n\r\nfunction Category(props) {\r\n    const user = useSelector(state => state.user)\r\n\r\n    if (user.userData && !user.userData.isAuth) {\r\n        return (\r\n            <Alert\r\n                message=\"Informational Notes\"\r\n                description=\"로그인 후 이용하실 수 있습니다\"\r\n                type=\"info\"\r\n                showIcon\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <CategoryDetail />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Category);\r\n\r\n","import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport { Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        Axios.post('/api/problem/image', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n\r\n\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={process.env.NODE_ENV === 'development' ? `http://localhost:5000/${image}` : `https://sjogbosite.herokuapp.com/${image}`} alt=\"hello\" />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport Axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\nimport FileUpload from '../../../utils/FileUpload'\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nfunction UploadProblemPage({ props, history, match }) {\r\n\r\n\r\n\r\n    const user = useSelector(state => state.user);\r\n    const postId = match.params.examId\r\n\r\n\r\n\r\n    const [Content, setContent] = useState(\"\");\r\n    const [Images, setImages] = useState([])\r\n\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const handleChangeContent = (event) => {\r\n        setContent(event.currentTarget.value)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n        //서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID \r\n            writer: user.userData._id,\r\n            postId: postId,\r\n            content: Content,\r\n            images: Images,\r\n\r\n\r\n        }\r\n\r\n        Axios.post('/api/problem/uploadProblem', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    history.goBack()\r\n                } else {\r\n                    console.log(response.data)\r\n                    alert('문제 업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2} >문제 올리기</Title>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <label>사진으로 올리기</label>\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <label>글로 올리기</label>\r\n\r\n                <TextArea onChange={handleChangeContent} value={Content} />\r\n                <br />\r\n                <br />\r\n                <button type=\"submit\">\r\n                    확인\r\n                </button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProblemPage\r\n","import React, { useState } from 'react'\r\nimport { Comment, Avatar, Button, Input } from 'antd';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nconst { TextArea } = Input;\r\nfunction SingleComment(props) {\r\n    const user = useSelector(state => state.user);\r\n    const [CommentValue, setCommentValue] = useState(\"\")\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n\r\n    const openReply = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            problemId: props.problemId,\r\n            responseTo: props.comment._id,\r\n            content: CommentValue\r\n        }\r\n\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setCommentValue(\"\")\r\n                    setOpenReply(!OpenReply)\r\n                    props.refreshFunction(response.data.result)\r\n                } else {\r\n                    alert('Failed to save Comment')\r\n                }\r\n            })\r\n    }\r\n\r\n    const actions = [\r\n        <span onClick={openReply} key=\"comment-basic-reply-to\">{'+'}</span>\r\n\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <Comment\r\n                actions={actions}\r\n                content={\r\n                    <p>\r\n                        {props.comment.content}\r\n                    </p>\r\n                }\r\n            ></Comment>\r\n\r\n\r\n\r\n            {OpenReply &&\r\n                <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                    <TextArea\r\n                        style={{ width: '100%', borderRadius: '5px' }}\r\n                        onChange={handleChange}\r\n                        value={CommentValue}\r\n                        placeholder=\"댓글 입력\"\r\n                    />\r\n                    <br />\r\n                    <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>제출</Button>\r\n                </form>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComment\r\n","import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\nimport { DownCircleOutlined } from '@ant-design/icons'\r\n\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} problemId={props.problemId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} problemId={props.problemId} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n                <DownCircleOutlined\r\n                    style={{ marginLeft: '40px' }}\r\n                    onClick={handleChange}\r\n                />\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","import React, { useState } from 'react'\r\nimport { Button, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\nconst { TextArea } = Input;\r\n\r\nfunction Comments(props) {\r\n    const user = useSelector(state => state.user)\r\n    const [Comment, setComment] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setComment(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            content: Comment,\r\n            writer: user.userData._id,\r\n            problemId: props.problemId\r\n        }\r\n\r\n        axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComment(\"\")\r\n                    props.refreshFunction(response.data.result)\r\n                } else {\r\n                    alert('Failed to save Comment')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Comment Lists  */}\r\n            {console.log(props.CommentLists)}\r\n\r\n            {props.CommentLists && props.CommentLists.map((comment, index) => (\r\n                (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment comment={comment} problemId={props.problemId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} problemId={props.problemId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                    </React.Fragment>\r\n                )\r\n            ))}\r\n\r\n\r\n\r\n            {/* Root Comment Form */}\r\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <TextArea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={handleChange}\r\n                    value={Comment}\r\n                    placeholder=\"문제 입력\"\r\n                />\r\n                <br />\r\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>제출</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport Comments from '../Sections/Comments'\r\nimport { Card } from 'antd';\r\n\r\nfunction CommentPage(props) {\r\n    const problemId = props.match.params.problemId\r\n    const [Problem, setProblem] = useState([])\r\n    const [CommentLists, setCommentLists] = useState([])\r\n\r\n    console.log(problemId)\r\n\r\n    const problemVariable = {\r\n        problemId: problemId\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/problem/getProblem', problemVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.problem)\r\n                    setProblem(response.data.problem)\r\n                } else {\r\n                    alert('Failed to get problem Info')\r\n                }\r\n            })\r\n\r\n\r\n        axios.post('/api/comment/getComments', problemVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log('response.data.comments', response.data.comments)\r\n                    setCommentLists(response.data.comments)\r\n                } else {\r\n                    alert('Failed to get exam Info')\r\n                }\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n    const updateComment = (newComment) => {\r\n        setCommentLists(CommentLists.concat(newComment))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"site-card-border-less-wrapper\">\r\n                <Card title=\"문제\" bordered={true} >\r\n                    {Problem.content}\r\n                </Card>\r\n\r\n            </div>\r\n            <div>\r\n                <Card title=\"댓글\" bordered={true} >\r\n                    <Comments CommentLists={CommentLists} problemId={Problem._id} refreshFunction={updateComment} />\r\n\r\n                </Card>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CommentPage\r\n","import { Layout, Drawer } from 'antd'\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\nimport React, { Suspense } from 'react';\nimport Auth from \"../hoc/auth\";\n// pages for this product\n\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport UploadExamPage from \"./views/UploadExamPage/UploadExamPage\"\nimport DetailExamPage from \"./views/DetailExamPage/DetailExamPage\"\nimport Category from './views/Category/Category'\nimport UploadProblemPage from './views/DetailExamPage/NewSections/UploadProblemPage'\nimport CommentPage from './views/DetailExamPage/NewSections/CommentPage'\n\nconst { Content, Sider } = Layout;\n\n\nfunction App() {\n  return (\n    <div style={{ backgroundColor: 'white' }}>\n      <Suspense fallback={(<div>Loading...</div>)}>\n        <NavBar />\n\n        <div style={{ paddingTop: '75px', minHeight: 'calc(100vh - 80px)' }}>\n          <Switch>\n            <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n            <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n            <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n            <Route exact path=\"/exam/upload\" component={Auth(UploadExamPage, true)} />\n            <Route exact path=\"/exam/:examId\" component={Auth(DetailExamPage, true)} />\n            <Route exact path=\"/exam/:examId/upload\" component={Auth(UploadProblemPage, true)} />\n            <Route exact path=\"/exam/:examId/:problemId\" component={Auth(CommentPage, true)} />\n          </Switch>\n        </div>\n\n\n        <Footer />\n      </Suspense>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}